{
  "version": 1.0,
  "waypoints": [
    {
      "anchor": {
        "x": 2.66,
        "y": 5.65
      },
      "prevControl": null,
      "nextControl": {
        "x": 2.2361771770005987,
        "y": 6.073822822999403
      },
      "isLocked": false,
      "linkedName": null
    },
    {
      "anchor": {
        "x": 2.66,
        "y": 7.098351746561043
      },
      "prevControl": {
        "x": 1.969604130094076,
        "y": 6.897784431766129
      },
      "nextControl": {
        "x": 3.1832993580517077,
        "y": 7.2503757543127625
      },
      "isLocked": false,
      "linkedName": null
    },
    {
      "anchor": {
        "x": 8.4,
        "y": 7.43
      },
      "prevControl": {
        "x": 6.210887620881967,
        "y": 7.3032531431808705
      },
      "nextControl": null,
      "isLocked": false,
      "linkedName": null
    }
  ],
  "rotationTargets": [
    {
      "waypointRelativePos": 1.0,
      "rotationDegrees": 34.27465494994468,
      "rotateFast": true
    }
  ],
  "constraintZones": [
    {
      "name": "New Constraints Zone",
      "minWaypointRelativePos": 0.9,
      "maxWaypointRelativePos": 1.05,
      "constraints": {
        "maxVelocity": 0.1,
        "maxAcceleration": 0.1,
        "maxAngularVelocity": 540.0,
        "maxAngularAcceleration": 720.0
      }
    }
  ],
  "eventMarkers": [
    {
      "name": "shoot",
      "waypointRelativePos": 0.9,
      "command": {
        "type": "parallel",
        "data": {
          "commands": [
            {
              "type": "named",
              "data": {
                "name": "index to shoot"
              }
            }
          ]
        }
      }
    }
  ],
  "globalConstraints": {
    "maxVelocity": 5.0,
    "maxAcceleration": 5.0,
    "maxAngularVelocity": 540.0,
    "maxAngularAcceleration": 720.0
  },
  "goalEndState": {
    "velocity": 0,
    "rotation": 4.398705354995522,
    "rotateFast": false
  },
  "reversed": false,
  "folder": "Amp Side",
  "previewStartingState": null,
  "useDefaultConstraints": false
}